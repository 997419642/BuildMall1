#import <Foundation/Foundation.h>
#import "SWGBrandTable.h"
#import "SWGMessageResult.h"
#import "SWGApi.h"

/**
* Youmu Cloud Framework Swagger API 
* https://www.51wood.com
*
* OpenAPI spec version: 1.0
* Contact: archerchu@163.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface SWGBrandControllerApi: NSObject <SWGApi>

extern NSString* kSWGBrandControllerApiErrorDomain;
extern NSInteger kSWGBrandControllerApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(SWGApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// 显示所有品牌信息
/// 显示所有品牌信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) getBrandUsingDELETEWithAuthorization: (NSString*) authorization
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示所有品牌信息
/// 显示所有品牌信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) getBrandUsingGETWithAuthorization: (NSString*) authorization
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示所有品牌信息
/// 显示所有品牌信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) getBrandUsingHEADWithAuthorization: (NSString*) authorization
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示所有品牌信息
/// 显示所有品牌信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) getBrandUsingOPTIONSWithAuthorization: (NSString*) authorization
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示所有品牌信息
/// 显示所有品牌信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) getBrandUsingPATCHWithAuthorization: (NSString*) authorization
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示所有品牌信息
/// 显示所有品牌信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) getBrandUsingPOSTWithAuthorization: (NSString*) authorization
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示所有品牌信息
/// 显示所有品牌信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) getBrandUsingPUTWithAuthorization: (NSString*) authorization
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 添加品牌信息
/// 添加品牌信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param brandTable brandTable (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertBrandInfoUsingDELETEWithAuthorization: (NSString*) authorization
    brandTable: (SWGBrandTable*) brandTable
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 添加品牌信息
/// 添加品牌信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param brandTable brandTable (optional)
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertBrandInfoUsingGETWithAuthorization: (NSString*) authorization
    brandTable: (SWGBrandTable*) brandTable
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 添加品牌信息
/// 添加品牌信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param brandTable brandTable (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertBrandInfoUsingHEADWithAuthorization: (NSString*) authorization
    brandTable: (SWGBrandTable*) brandTable
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 添加品牌信息
/// 添加品牌信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param brandTable brandTable (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertBrandInfoUsingOPTIONSWithAuthorization: (NSString*) authorization
    brandTable: (SWGBrandTable*) brandTable
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 添加品牌信息
/// 添加品牌信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param brandTable brandTable (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertBrandInfoUsingPATCHWithAuthorization: (NSString*) authorization
    brandTable: (SWGBrandTable*) brandTable
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 添加品牌信息
/// 添加品牌信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param brandTable brandTable (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertBrandInfoUsingPOSTWithAuthorization: (NSString*) authorization
    brandTable: (SWGBrandTable*) brandTable
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 添加品牌信息
/// 添加品牌信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param brandTable brandTable (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertBrandInfoUsingPUTWithAuthorization: (NSString*) authorization
    brandTable: (SWGBrandTable*) brandTable
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;



@end
