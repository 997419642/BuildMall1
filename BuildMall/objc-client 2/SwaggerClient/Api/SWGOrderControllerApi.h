#import <Foundation/Foundation.h>
#import "SWGMessageResult.h"
#import "SWGOrderDetailBean.h"
#import "SWGApi.h"

/**
* Youmu Cloud Framework Swagger API 
* https://www.51wood.com
*
* OpenAPI spec version: 1.0
* Contact: archerchu@163.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface SWGOrderControllerApi: NSObject <SWGApi>

extern NSString* kSWGOrderControllerApiErrorDomain;
extern NSInteger kSWGOrderControllerApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(SWGApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// 删除订单及详细订单
/// 删除订单及详细订单
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderId 订单编号
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) deleteOrderUsingDELETEWithAuthorization: (NSString*) authorization
    orderId: (NSNumber*) orderId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 删除订单及详细订单
/// 删除订单及详细订单
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderId 订单编号
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) deleteOrderUsingGETWithAuthorization: (NSString*) authorization
    orderId: (NSNumber*) orderId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 删除订单及详细订单
/// 删除订单及详细订单
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderId 订单编号
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) deleteOrderUsingHEADWithAuthorization: (NSString*) authorization
    orderId: (NSNumber*) orderId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 删除订单及详细订单
/// 删除订单及详细订单
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderId 订单编号
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) deleteOrderUsingOPTIONSWithAuthorization: (NSString*) authorization
    orderId: (NSNumber*) orderId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 删除订单及详细订单
/// 删除订单及详细订单
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderId 订单编号
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) deleteOrderUsingPATCHWithAuthorization: (NSString*) authorization
    orderId: (NSNumber*) orderId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 删除订单及详细订单
/// 删除订单及详细订单
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderId 订单编号
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) deleteOrderUsingPOSTWithAuthorization: (NSString*) authorization
    orderId: (NSNumber*) orderId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 删除订单及详细订单
/// 删除订单及详细订单
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderId 订单编号
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) deleteOrderUsingPUTWithAuthorization: (NSString*) authorization
    orderId: (NSNumber*) orderId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 订单信息列表
/// 显示订单信息列表
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderId 订单编号 (optional)
/// @param buyerId 用户id (optional)
/// @param storeId 店铺id (optional)
/// @param orderStatus 显示状态0：未审核，1：审核通过，2：未通过 (optional)
/// @param dateId 时间筛选id (optional)
/// @param categoryId 类目id (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) getOrderUsingDELETEWithAuthorization: (NSString*) authorization
    orderId: (NSString*) orderId
    buyerId: (NSNumber*) buyerId
    storeId: (NSNumber*) storeId
    orderStatus: (NSNumber*) orderStatus
    dateId: (NSNumber*) dateId
    categoryId: (NSNumber*) categoryId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 订单信息列表
/// 显示订单信息列表
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderId 订单编号 (optional)
/// @param buyerId 用户id (optional)
/// @param storeId 店铺id (optional)
/// @param orderStatus 显示状态0：未审核，1：审核通过，2：未通过 (optional)
/// @param dateId 时间筛选id (optional)
/// @param categoryId 类目id (optional)
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) getOrderUsingGETWithAuthorization: (NSString*) authorization
    orderId: (NSString*) orderId
    buyerId: (NSNumber*) buyerId
    storeId: (NSNumber*) storeId
    orderStatus: (NSNumber*) orderStatus
    dateId: (NSNumber*) dateId
    categoryId: (NSNumber*) categoryId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 订单信息列表
/// 显示订单信息列表
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderId 订单编号 (optional)
/// @param buyerId 用户id (optional)
/// @param storeId 店铺id (optional)
/// @param orderStatus 显示状态0：未审核，1：审核通过，2：未通过 (optional)
/// @param dateId 时间筛选id (optional)
/// @param categoryId 类目id (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) getOrderUsingHEADWithAuthorization: (NSString*) authorization
    orderId: (NSString*) orderId
    buyerId: (NSNumber*) buyerId
    storeId: (NSNumber*) storeId
    orderStatus: (NSNumber*) orderStatus
    dateId: (NSNumber*) dateId
    categoryId: (NSNumber*) categoryId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 订单信息列表
/// 显示订单信息列表
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderId 订单编号 (optional)
/// @param buyerId 用户id (optional)
/// @param storeId 店铺id (optional)
/// @param orderStatus 显示状态0：未审核，1：审核通过，2：未通过 (optional)
/// @param dateId 时间筛选id (optional)
/// @param categoryId 类目id (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) getOrderUsingOPTIONSWithAuthorization: (NSString*) authorization
    orderId: (NSString*) orderId
    buyerId: (NSNumber*) buyerId
    storeId: (NSNumber*) storeId
    orderStatus: (NSNumber*) orderStatus
    dateId: (NSNumber*) dateId
    categoryId: (NSNumber*) categoryId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 订单信息列表
/// 显示订单信息列表
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderId 订单编号 (optional)
/// @param buyerId 用户id (optional)
/// @param storeId 店铺id (optional)
/// @param orderStatus 显示状态0：未审核，1：审核通过，2：未通过 (optional)
/// @param dateId 时间筛选id (optional)
/// @param categoryId 类目id (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) getOrderUsingPATCHWithAuthorization: (NSString*) authorization
    orderId: (NSString*) orderId
    buyerId: (NSNumber*) buyerId
    storeId: (NSNumber*) storeId
    orderStatus: (NSNumber*) orderStatus
    dateId: (NSNumber*) dateId
    categoryId: (NSNumber*) categoryId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 订单信息列表
/// 显示订单信息列表
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderId 订单编号 (optional)
/// @param buyerId 用户id (optional)
/// @param storeId 店铺id (optional)
/// @param orderStatus 显示状态0：未审核，1：审核通过，2：未通过 (optional)
/// @param dateId 时间筛选id (optional)
/// @param categoryId 类目id (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) getOrderUsingPOSTWithAuthorization: (NSString*) authorization
    orderId: (NSString*) orderId
    buyerId: (NSNumber*) buyerId
    storeId: (NSNumber*) storeId
    orderStatus: (NSNumber*) orderStatus
    dateId: (NSNumber*) dateId
    categoryId: (NSNumber*) categoryId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 订单信息列表
/// 显示订单信息列表
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderId 订单编号 (optional)
/// @param buyerId 用户id (optional)
/// @param storeId 店铺id (optional)
/// @param orderStatus 显示状态0：未审核，1：审核通过，2：未通过 (optional)
/// @param dateId 时间筛选id (optional)
/// @param categoryId 类目id (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) getOrderUsingPUTWithAuthorization: (NSString*) authorization
    orderId: (NSString*) orderId
    buyerId: (NSNumber*) buyerId
    storeId: (NSNumber*) storeId
    orderStatus: (NSNumber*) orderStatus
    dateId: (NSNumber*) dateId
    categoryId: (NSNumber*) categoryId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 订单详情审核
/// 订单详情审核
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderId 订单id
/// @param payType 结算方式
/// @param prepayPrice 预付金额
/// @param invoiceType 是否含税
/// @param collectType 收款方式
/// @param paymentAccountId 收款账户id
/// @param buyerId 买家id
/// @param orderDetailList orderDetailList (optional)
/// @param tailMoney 账户余额 (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateOrderInfoUsingDELETEWithAuthorization: (NSString*) authorization
    orderId: (NSNumber*) orderId
    payType: (NSNumber*) payType
    prepayPrice: (NSNumber*) prepayPrice
    invoiceType: (NSNumber*) invoiceType
    collectType: (NSNumber*) collectType
    paymentAccountId: (NSNumber*) paymentAccountId
    buyerId: (NSNumber*) buyerId
    orderDetailList: (NSArray<SWGOrderDetailBean>*) orderDetailList
    tailMoney: (NSNumber*) tailMoney
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 订单详情审核
/// 订单详情审核
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderId 订单id
/// @param payType 结算方式
/// @param prepayPrice 预付金额
/// @param invoiceType 是否含税
/// @param collectType 收款方式
/// @param paymentAccountId 收款账户id
/// @param buyerId 买家id
/// @param orderDetailList orderDetailList (optional)
/// @param tailMoney 账户余额 (optional)
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateOrderInfoUsingGETWithAuthorization: (NSString*) authorization
    orderId: (NSNumber*) orderId
    payType: (NSNumber*) payType
    prepayPrice: (NSNumber*) prepayPrice
    invoiceType: (NSNumber*) invoiceType
    collectType: (NSNumber*) collectType
    paymentAccountId: (NSNumber*) paymentAccountId
    buyerId: (NSNumber*) buyerId
    orderDetailList: (NSArray<SWGOrderDetailBean>*) orderDetailList
    tailMoney: (NSNumber*) tailMoney
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 订单详情审核
/// 订单详情审核
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderId 订单id
/// @param payType 结算方式
/// @param prepayPrice 预付金额
/// @param invoiceType 是否含税
/// @param collectType 收款方式
/// @param paymentAccountId 收款账户id
/// @param buyerId 买家id
/// @param orderDetailList orderDetailList (optional)
/// @param tailMoney 账户余额 (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateOrderInfoUsingHEADWithAuthorization: (NSString*) authorization
    orderId: (NSNumber*) orderId
    payType: (NSNumber*) payType
    prepayPrice: (NSNumber*) prepayPrice
    invoiceType: (NSNumber*) invoiceType
    collectType: (NSNumber*) collectType
    paymentAccountId: (NSNumber*) paymentAccountId
    buyerId: (NSNumber*) buyerId
    orderDetailList: (NSArray<SWGOrderDetailBean>*) orderDetailList
    tailMoney: (NSNumber*) tailMoney
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 订单详情审核
/// 订单详情审核
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderId 订单id
/// @param payType 结算方式
/// @param prepayPrice 预付金额
/// @param invoiceType 是否含税
/// @param collectType 收款方式
/// @param paymentAccountId 收款账户id
/// @param buyerId 买家id
/// @param orderDetailList orderDetailList (optional)
/// @param tailMoney 账户余额 (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateOrderInfoUsingOPTIONSWithAuthorization: (NSString*) authorization
    orderId: (NSNumber*) orderId
    payType: (NSNumber*) payType
    prepayPrice: (NSNumber*) prepayPrice
    invoiceType: (NSNumber*) invoiceType
    collectType: (NSNumber*) collectType
    paymentAccountId: (NSNumber*) paymentAccountId
    buyerId: (NSNumber*) buyerId
    orderDetailList: (NSArray<SWGOrderDetailBean>*) orderDetailList
    tailMoney: (NSNumber*) tailMoney
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 订单详情审核
/// 订单详情审核
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderId 订单id
/// @param payType 结算方式
/// @param prepayPrice 预付金额
/// @param invoiceType 是否含税
/// @param collectType 收款方式
/// @param paymentAccountId 收款账户id
/// @param buyerId 买家id
/// @param orderDetailList orderDetailList (optional)
/// @param tailMoney 账户余额 (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateOrderInfoUsingPATCHWithAuthorization: (NSString*) authorization
    orderId: (NSNumber*) orderId
                                                         userId:(NSNumber*)userId
    payType: (NSNumber*) payType
    prepayPrice: (NSNumber*) prepayPrice
    invoiceType: (NSNumber*) invoiceType
    collectType: (NSNumber*) collectType
    paymentAccountId: (NSNumber*) paymentAccountId
    buyerId: (NSNumber*) buyerId
    orderDetailList: (NSArray<SWGOrderDetailBean>*) orderDetailList
    tailMoney: (NSNumber*) tailMoney
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 订单详情审核
/// 订单详情审核
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderId 订单id
/// @param payType 结算方式
/// @param prepayPrice 预付金额
/// @param invoiceType 是否含税
/// @param collectType 收款方式
/// @param paymentAccountId 收款账户id
/// @param buyerId 买家id
/// @param orderDetailList orderDetailList (optional)
/// @param tailMoney 账户余额 (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateOrderInfoUsingPOSTWithAuthorization: (NSString*) authorization
    orderId: (NSNumber*) orderId
    userId:(NSNumber*)userId
    orderStatus:(NSString*)orderStatus
    payType: (NSNumber*) payType
    prepayPrice: (NSString*) prepayPrice
    invoiceType: (NSNumber*) invoiceType
    collectType: (NSNumber*) collectType
    paymentAccountId: (NSNumber*) paymentAccountId
    buyerId: (NSNumber*) buyerId
    orderDetailList: (NSArray<SWGOrderDetailBean>*) orderDetailList
    tailMoney: (NSNumber*) tailMoney
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 订单详情审核
/// 订单详情审核
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderId 订单id
/// @param payType 结算方式
/// @param prepayPrice 预付金额
/// @param invoiceType 是否含税
/// @param collectType 收款方式
/// @param paymentAccountId 收款账户id
/// @param buyerId 买家id
/// @param orderDetailList orderDetailList (optional)
/// @param tailMoney 账户余额 (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateOrderInfoUsingPUTWithAuthorization: (NSString*) authorization
    orderId: (NSNumber*) orderId
    payType: (NSNumber*) payType
    prepayPrice: (NSNumber*) prepayPrice
    invoiceType: (NSNumber*) invoiceType
    collectType: (NSNumber*) collectType
    paymentAccountId: (NSNumber*) paymentAccountId
    buyerId: (NSNumber*) buyerId
    orderDetailList: (NSArray<SWGOrderDetailBean>*) orderDetailList
    tailMoney: (NSNumber*) tailMoney
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 审核订单修改订单状态
/// 审核订单修改订单状态
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderId 订单编号
/// @param orderStatus 状态值
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateOrderUsingDELETEWithAuthorization: (NSString*) authorization
    orderId: (NSNumber*) orderId
    orderStatus: (NSNumber*) orderStatus
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 审核订单修改订单状态
/// 审核订单修改订单状态
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderId 订单编号
/// @param orderStatus 状态值
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateOrderUsingGETWithAuthorization: (NSString*) authorization
    orderId: (NSNumber*) orderId
    orderStatus: (NSNumber*) orderStatus
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 审核订单修改订单状态
/// 审核订单修改订单状态
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderId 订单编号
/// @param orderStatus 状态值
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateOrderUsingHEADWithAuthorization: (NSString*) authorization
    orderId: (NSNumber*) orderId
    orderStatus: (NSNumber*) orderStatus
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 审核订单修改订单状态
/// 审核订单修改订单状态
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderId 订单编号
/// @param orderStatus 状态值
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateOrderUsingOPTIONSWithAuthorization: (NSString*) authorization
    orderId: (NSNumber*) orderId
    orderStatus: (NSNumber*) orderStatus
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 审核订单修改订单状态
/// 审核订单修改订单状态
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderId 订单编号
/// @param orderStatus 状态值
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateOrderUsingPATCHWithAuthorization: (NSString*) authorization
    orderId: (NSNumber*) orderId
    orderStatus: (NSNumber*) orderStatus
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 审核订单修改订单状态
/// 审核订单修改订单状态
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderId 订单编号
/// @param orderStatus 状态值
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateOrderUsingPOSTWithAuthorization: (NSString*) authorization
    orderId: (NSNumber*) orderId
    orderStatus: (NSNumber*) orderStatus
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 审核订单修改订单状态
/// 审核订单修改订单状态
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderId 订单编号
/// @param orderStatus 状态值
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateOrderUsingPUTWithAuthorization: (NSString*) authorization
    orderId: (NSNumber*) orderId
    orderStatus: (NSNumber*) orderStatus
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;



@end
