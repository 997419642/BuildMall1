#import <Foundation/Foundation.h>
#import "SWGMessageResult.h"
#import "SWGOrderDetailBean.h"
#import "SWGApi.h"
#import "SWGLoadingCustomBean.h"
/**
* Youmu Cloud Framework Swagger API 
* https://www.51wood.com
*
* OpenAPI spec version: 1.0
* Contact: archerchu@163.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface SWGOrderDetailControllerApi: NSObject <SWGApi>

extern NSString* kSWGOrderDetailControllerApiErrorDomain;
extern NSInteger kSWGOrderDetailControllerApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(SWGApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// 自定义添加板材商品
/// 自定义添加板材商品
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean json对象
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) customAddBoardGoodsUsingDELETEWithAuthorization: (NSString*) authorization
    bean: (NSString*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 自定义添加板材商品
/// 自定义添加板材商品
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean json对象
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) customAddBoardGoodsUsingGETWithAuthorization: (NSString*) authorization
    bean: (NSString*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 自定义添加板材商品
/// 自定义添加板材商品
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean json对象
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) customAddBoardGoodsUsingHEADWithAuthorization: (NSString*) authorization
    bean: (NSString*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 自定义添加板材商品
/// 自定义添加板材商品
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean json对象
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) customAddBoardGoodsUsingOPTIONSWithAuthorization: (NSString*) authorization
    bean: (NSString*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 自定义添加板材商品
/// 自定义添加板材商品
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean json对象
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) customAddBoardGoodsUsingPATCHWithAuthorization: (NSString*) authorization
    bean: (NSString*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 自定义添加板材商品
/// 自定义添加板材商品
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean json对象
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) customAddBoardGoodsUsingPOSTWithAuthorization: (NSString*) authorization bean: (SWGLoadingCustomBean*) bean completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler ;


/// 自定义添加板材商品
/// 自定义添加板材商品
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean json对象
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) customAddBoardGoodsUsingPUTWithAuthorization: (NSString*) authorization
    bean: (NSString*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 删除详细订单
/// 删除详细订单
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 详细订单ID
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) deleteOrderDetailUsingDELETEWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 删除详细订单
/// 删除详细订单
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 详细订单ID
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) deleteOrderDetailUsingGETWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 删除详细订单
/// 删除详细订单
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 详细订单ID
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) deleteOrderDetailUsingHEADWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 删除详细订单
/// 删除详细订单
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 详细订单ID
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) deleteOrderDetailUsingOPTIONSWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 删除详细订单
/// 删除详细订单
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 详细订单ID
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) deleteOrderDetailUsingPATCHWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 删除详细订单
/// 删除详细订单
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 详细订单ID
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) deleteOrderDetailUsingPOSTWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 删除详细订单
/// 删除详细订单
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 详细订单ID
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) deleteOrderDetailUsingPUTWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 为某一个订单添加商品
/// 为某一个订单添加商品
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertOrderDetailUsingDELETEWithAuthorization: (NSString*) authorization
    bean: (SWGOrderDetailBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 为某一个订单添加商品
/// 为某一个订单添加商品
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertOrderDetailUsingGETWithAuthorization: (NSString*) authorization
    bean: (SWGOrderDetailBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 为某一个订单添加商品
/// 为某一个订单添加商品
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertOrderDetailUsingHEADWithAuthorization: (NSString*) authorization
    bean: (SWGOrderDetailBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 为某一个订单添加商品
/// 为某一个订单添加商品
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertOrderDetailUsingOPTIONSWithAuthorization: (NSString*) authorization
    bean: (SWGOrderDetailBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 为某一个订单添加商品
/// 为某一个订单添加商品
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertOrderDetailUsingPATCHWithAuthorization: (NSString*) authorization
    bean: (SWGOrderDetailBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 为某一个订单添加商品
/// 为某一个订单添加商品
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertOrderDetailUsingPOSTWithAuthorization: (NSString*) authorization
    bean: (SWGOrderDetailBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 为某一个订单添加商品
/// 为某一个订单添加商品
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertOrderDetailUsingPUTWithAuthorization: (NSString*) authorization
    bean: (SWGOrderDetailBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 订单详情更新价格
/// 订单详情更新价格
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderDetailId 详细订单id
/// @param orderId 订单id
/// @param buyPrice 商品价格
/// @param totalPrice 总金额
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateMoneyUsingDELETEWithAuthorization: (NSString*) authorization
    orderDetailId: (NSNumber*) orderDetailId
    orderId: (NSNumber*) orderId
    buyPrice: (NSNumber*) buyPrice
    totalPrice: (NSNumber*) totalPrice
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 订单详情更新价格
/// 订单详情更新价格
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderDetailId 详细订单id
/// @param orderId 订单id
/// @param buyPrice 商品价格
/// @param totalPrice 总金额
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateMoneyUsingGETWithAuthorization: (NSString*) authorization
    orderDetailId: (NSNumber*) orderDetailId
    orderId: (NSNumber*) orderId
    buyPrice: (NSNumber*) buyPrice
    totalPrice: (NSNumber*) totalPrice
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 订单详情更新价格
/// 订单详情更新价格
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderDetailId 详细订单id
/// @param orderId 订单id
/// @param buyPrice 商品价格
/// @param totalPrice 总金额
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateMoneyUsingHEADWithAuthorization: (NSString*) authorization
    orderDetailId: (NSNumber*) orderDetailId
    orderId: (NSNumber*) orderId
    buyPrice: (NSNumber*) buyPrice
    totalPrice: (NSNumber*) totalPrice
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 订单详情更新价格
/// 订单详情更新价格
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderDetailId 详细订单id
/// @param orderId 订单id
/// @param buyPrice 商品价格
/// @param totalPrice 总金额
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateMoneyUsingOPTIONSWithAuthorization: (NSString*) authorization
    orderDetailId: (NSNumber*) orderDetailId
    orderId: (NSNumber*) orderId
    buyPrice: (NSNumber*) buyPrice
    totalPrice: (NSNumber*) totalPrice
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 订单详情更新价格
/// 订单详情更新价格
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderDetailId 详细订单id
/// @param orderId 订单id
/// @param buyPrice 商品价格
/// @param totalPrice 总金额
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateMoneyUsingPATCHWithAuthorization: (NSString*) authorization
    orderDetailId: (NSNumber*) orderDetailId
    orderId: (NSNumber*) orderId
    buyPrice: (NSNumber*) buyPrice
    totalPrice: (NSNumber*) totalPrice
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 订单详情更新价格
/// 订单详情更新价格
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderDetailId 详细订单id
/// @param orderId 订单id
/// @param buyPrice 商品价格
/// @param totalPrice 总金额
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateMoneyUsingPOSTWithAuthorization: (NSString*) authorization
    orderDetailId: (NSNumber*) orderDetailId
    orderId: (NSNumber*) orderId
    buyPrice: (NSNumber*) buyPrice
    totalPrice: (NSNumber*) totalPrice
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 订单详情更新价格
/// 订单详情更新价格
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderDetailId 详细订单id
/// @param orderId 订单id
/// @param buyPrice 商品价格
/// @param totalPrice 总金额
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateMoneyUsingPUTWithAuthorization: (NSString*) authorization
    orderDetailId: (NSNumber*) orderDetailId
    orderId: (NSNumber*) orderId
    buyPrice: (NSNumber*) buyPrice
    totalPrice: (NSNumber*) totalPrice
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 为订单商品加减件数更新库存
/// 为订单商品加减件数更新库存
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderDetailId 详细订单id
/// @param orderId 订单id
/// @param goodsId 商品id
/// @param lockNum 可售量
/// @param buyPrice 单价
/// @param totalPrice 总金额
/// @param buyNumber 数量值
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateNumPlusUsingDELETEWithAuthorization: (NSString*) authorization
    orderDetailId: (NSNumber*) orderDetailId
    orderId: (NSNumber*) orderId
    goodsId: (NSNumber*) goodsId
    lockNum: (NSNumber*) lockNum
    buyPrice: (NSNumber*) buyPrice
    totalPrice: (NSNumber*) totalPrice
    buyNumber: (NSNumber*) buyNumber
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 为订单商品加减件数更新库存
/// 为订单商品加减件数更新库存
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderDetailId 详细订单id
/// @param orderId 订单id
/// @param goodsId 商品id
/// @param lockNum 可售量
/// @param buyPrice 单价
/// @param totalPrice 总金额
/// @param buyNumber 数量值
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateNumPlusUsingGETWithAuthorization: (NSString*) authorization
    orderDetailId: (NSNumber*) orderDetailId
    orderId: (NSNumber*) orderId
    goodsId: (NSNumber*) goodsId
    lockNum: (NSNumber*) lockNum
    buyPrice: (NSNumber*) buyPrice
    totalPrice: (NSNumber*) totalPrice
    buyNumber: (NSNumber*) buyNumber
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 为订单商品加减件数更新库存
/// 为订单商品加减件数更新库存
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderDetailId 详细订单id
/// @param orderId 订单id
/// @param goodsId 商品id
/// @param lockNum 可售量
/// @param buyPrice 单价
/// @param totalPrice 总金额
/// @param buyNumber 数量值
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateNumPlusUsingHEADWithAuthorization: (NSString*) authorization
    orderDetailId: (NSNumber*) orderDetailId
    orderId: (NSNumber*) orderId
    goodsId: (NSNumber*) goodsId
    lockNum: (NSNumber*) lockNum
    buyPrice: (NSNumber*) buyPrice
    totalPrice: (NSNumber*) totalPrice
    buyNumber: (NSNumber*) buyNumber
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 为订单商品加减件数更新库存
/// 为订单商品加减件数更新库存
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderDetailId 详细订单id
/// @param orderId 订单id
/// @param goodsId 商品id
/// @param lockNum 可售量
/// @param buyPrice 单价
/// @param totalPrice 总金额
/// @param buyNumber 数量值
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateNumPlusUsingOPTIONSWithAuthorization: (NSString*) authorization
    orderDetailId: (NSNumber*) orderDetailId
    orderId: (NSNumber*) orderId
    goodsId: (NSNumber*) goodsId
    lockNum: (NSNumber*) lockNum
    buyPrice: (NSNumber*) buyPrice
    totalPrice: (NSNumber*) totalPrice
    buyNumber: (NSNumber*) buyNumber
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 为订单商品加减件数更新库存
/// 为订单商品加减件数更新库存
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderDetailId 详细订单id
/// @param orderId 订单id
/// @param goodsId 商品id
/// @param lockNum 可售量
/// @param buyPrice 单价
/// @param totalPrice 总金额
/// @param buyNumber 数量值
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateNumPlusUsingPATCHWithAuthorization: (NSString*) authorization
    orderDetailId: (NSNumber*) orderDetailId
    orderId: (NSNumber*) orderId
    goodsId: (NSNumber*) goodsId
    lockNum: (NSNumber*) lockNum
    buyPrice: (NSNumber*) buyPrice
    totalPrice: (NSNumber*) totalPrice
    buyNumber: (NSNumber*) buyNumber
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 为订单商品加减件数更新库存
/// 为订单商品加减件数更新库存
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderDetailId 详细订单id
/// @param orderId 订单id
/// @param goodsId 商品id
/// @param lockNum 可售量
/// @param buyPrice 单价
/// @param totalPrice 总金额
/// @param buyNumber 数量值
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateNumPlusUsingPOSTWithAuthorization: (NSString*) authorization
    orderDetailId: (NSNumber*) orderDetailId
    orderId: (NSNumber*) orderId
    goodsId: (NSNumber*) goodsId
    lockNum: (NSNumber*) lockNum
    buyPrice: (NSNumber*) buyPrice
    totalPrice: (NSNumber*) totalPrice
    buyNumber: (NSNumber*) buyNumber
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 为订单商品加减件数更新库存
/// 为订单商品加减件数更新库存
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param orderDetailId 详细订单id
/// @param orderId 订单id
/// @param goodsId 商品id
/// @param lockNum 可售量
/// @param buyPrice 单价
/// @param totalPrice 总金额
/// @param buyNumber 数量值
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateNumPlusUsingPUTWithAuthorization: (NSString*) authorization
    orderDetailId: (NSNumber*) orderDetailId
    orderId: (NSNumber*) orderId
    goodsId: (NSNumber*) goodsId
    lockNum: (NSNumber*) lockNum
    buyPrice: (NSNumber*) buyPrice
    totalPrice: (NSNumber*) totalPrice
    buyNumber: (NSNumber*) buyNumber
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;



@end
