#import <Foundation/Foundation.h>
#import "SWGBoardPriceUpdate.h"
#import "SWGCategoryBean.h"
#import "SWGCategoryLogBean.h"
#import "SWGMallCategoryTable.h"
#import "SWGMessageResult.h"
#import "SWGApi.h"

/**
* Youmu Cloud Framework Swagger API 
* https://www.51wood.com
*
* OpenAPI spec version: 1.0
* Contact: archerchu@163.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface SWGCategoryControllerApi: NSObject <SWGApi>

extern NSString* kSWGCategoryControllerApiErrorDomain;
extern NSInteger kSWGCategoryControllerApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(SWGApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// 板材商品价格更新
/// 板材商品价格更新
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param boardPriceUpdateList boardPriceUpdateList (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) boardPriceUpdateUsingDELETEWithAuthorization: (NSString*) authorization
    boardPriceUpdateList: (NSArray<SWGBoardPriceUpdate>*) boardPriceUpdateList
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 板材商品价格更新
/// 板材商品价格更新
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param boardPriceUpdateList boardPriceUpdateList (optional)
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) boardPriceUpdateUsingGETWithAuthorization: (NSString*) authorization
    boardPriceUpdateList: (NSArray<SWGBoardPriceUpdate>*) boardPriceUpdateList
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 板材商品价格更新
/// 板材商品价格更新
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param boardPriceUpdateList boardPriceUpdateList (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) boardPriceUpdateUsingHEADWithAuthorization: (NSString*) authorization
    boardPriceUpdateList: (NSArray<SWGBoardPriceUpdate>*) boardPriceUpdateList
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 板材商品价格更新
/// 板材商品价格更新
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param boardPriceUpdateList boardPriceUpdateList (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) boardPriceUpdateUsingOPTIONSWithAuthorization: (NSString*) authorization
    boardPriceUpdateList: (NSArray<SWGBoardPriceUpdate>*) boardPriceUpdateList
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 板材商品价格更新
/// 板材商品价格更新
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param boardPriceUpdateList boardPriceUpdateList (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) boardPriceUpdateUsingPATCHWithAuthorization: (NSString*) authorization
    boardPriceUpdateList: (NSArray<SWGBoardPriceUpdate>*) boardPriceUpdateList
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 板材商品价格更新
/// 板材商品价格更新
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param boardPriceUpdateList boardPriceUpdateList (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) boardPriceUpdateUsingPOSTWithAuthorization: (NSString*) authorization
    boardPriceUpdateList: (NSArray<SWGBoardPriceUpdate>*) boardPriceUpdateList
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 板材商品价格更新
/// 板材商品价格更新
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param boardPriceUpdateList boardPriceUpdateList (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) boardPriceUpdateUsingPUTWithAuthorization: (NSString*) authorization
    boardPriceUpdateList: (NSArray<SWGBoardPriceUpdate>*) boardPriceUpdateList
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示所有类目信息
/// 显示所有类目信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param categoryName 类目名称
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) categoryListUsingDELETEWithAuthorization: (NSString*) authorization
    categoryName: (NSString*) categoryName
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示所有类目信息
/// 显示所有类目信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param categoryName 类目名称
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) categoryListUsingGETWithAuthorization: (NSString*) authorization
    categoryName: (NSString*) categoryName
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示所有类目信息
/// 显示所有类目信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param categoryName 类目名称
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) categoryListUsingHEADWithAuthorization: (NSString*) authorization
    categoryName: (NSString*) categoryName
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示所有类目信息
/// 显示所有类目信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param categoryName 类目名称
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) categoryListUsingOPTIONSWithAuthorization: (NSString*) authorization
    categoryName: (NSString*) categoryName
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示所有类目信息
/// 显示所有类目信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param categoryName 类目名称
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) categoryListUsingPATCHWithAuthorization: (NSString*) authorization
    categoryName: (NSString*) categoryName
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示所有类目信息
/// 显示所有类目信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param categoryName 类目名称
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) categoryListUsingPOSTWithAuthorization: (NSString*) authorization
    categoryName: (NSString*) categoryName
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示所有类目信息
/// 显示所有类目信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param categoryName 类目名称
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) categoryListUsingPUTWithAuthorization: (NSString*) authorization
    categoryName: (NSString*) categoryName
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 导入板材商品信息
/// 导入板材商品信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param storeId 店铺id
/// @param categoryBeanList categoryBeanList (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) importCommodityInfoUsingDELETEWithAuthorization: (NSString*) authorization
    storeId: (NSNumber*) storeId
    categoryBeanList: (NSArray<SWGCategoryBean>*) categoryBeanList
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 导入板材商品信息
/// 导入板材商品信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param storeId 店铺id
/// @param categoryBeanList categoryBeanList (optional)
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) importCommodityInfoUsingGETWithAuthorization: (NSString*) authorization
    storeId: (NSNumber*) storeId
    categoryBeanList: (NSArray<SWGCategoryBean>*) categoryBeanList
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 导入板材商品信息
/// 导入板材商品信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param storeId 店铺id
/// @param categoryBeanList categoryBeanList (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) importCommodityInfoUsingHEADWithAuthorization: (NSString*) authorization
    storeId: (NSNumber*) storeId
    categoryBeanList: (NSArray<SWGCategoryBean>*) categoryBeanList
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 导入板材商品信息
/// 导入板材商品信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param storeId 店铺id
/// @param categoryBeanList categoryBeanList (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) importCommodityInfoUsingOPTIONSWithAuthorization: (NSString*) authorization
    storeId: (NSNumber*) storeId
    categoryBeanList: (NSArray<SWGCategoryBean>*) categoryBeanList
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 导入板材商品信息
/// 导入板材商品信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param storeId 店铺id
/// @param categoryBeanList categoryBeanList (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) importCommodityInfoUsingPATCHWithAuthorization: (NSString*) authorization
    storeId: (NSNumber*) storeId
    categoryBeanList: (NSArray<SWGCategoryBean>*) categoryBeanList
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 导入板材商品信息
/// 导入板材商品信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param storeId 店铺id
/// @param categoryBeanList categoryBeanList (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) importCommodityInfoUsingPOSTWithAuthorization: (NSString*) authorization
    storeId: (NSNumber*) storeId
    categoryBeanList: (NSArray<SWGCategoryBean>*) categoryBeanList
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 导入板材商品信息
/// 导入板材商品信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param storeId 店铺id
/// @param categoryBeanList categoryBeanList (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) importCommodityInfoUsingPUTWithAuthorization: (NSString*) authorization
    storeId: (NSNumber*) storeId
    categoryBeanList: (NSArray<SWGCategoryBean>*) categoryBeanList
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 导入原木商品信息
/// 导入原木商品信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param storeId 店铺id
/// @param categoryLogBeanList categoryLogBeanList (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) importExcelCategoryUsingDELETEWithAuthorization: (NSString*) authorization
    storeId: (NSNumber*) storeId
    categoryLogBeanList: (NSArray<SWGCategoryLogBean>*) categoryLogBeanList
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 导入原木商品信息
/// 导入原木商品信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param storeId 店铺id
/// @param categoryLogBeanList categoryLogBeanList (optional)
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) importExcelCategoryUsingGETWithAuthorization: (NSString*) authorization
    storeId: (NSNumber*) storeId
    categoryLogBeanList: (NSArray<SWGCategoryLogBean>*) categoryLogBeanList
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 导入原木商品信息
/// 导入原木商品信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param storeId 店铺id
/// @param categoryLogBeanList categoryLogBeanList (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) importExcelCategoryUsingHEADWithAuthorization: (NSString*) authorization
    storeId: (NSNumber*) storeId
    categoryLogBeanList: (NSArray<SWGCategoryLogBean>*) categoryLogBeanList
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 导入原木商品信息
/// 导入原木商品信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param storeId 店铺id
/// @param categoryLogBeanList categoryLogBeanList (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) importExcelCategoryUsingOPTIONSWithAuthorization: (NSString*) authorization
    storeId: (NSNumber*) storeId
    categoryLogBeanList: (NSArray<SWGCategoryLogBean>*) categoryLogBeanList
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 导入原木商品信息
/// 导入原木商品信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param storeId 店铺id
/// @param categoryLogBeanList categoryLogBeanList (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) importExcelCategoryUsingPATCHWithAuthorization: (NSString*) authorization
    storeId: (NSNumber*) storeId
    categoryLogBeanList: (NSArray<SWGCategoryLogBean>*) categoryLogBeanList
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 导入原木商品信息
/// 导入原木商品信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param storeId 店铺id
/// @param categoryLogBeanList categoryLogBeanList (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) importExcelCategoryUsingPOSTWithAuthorization: (NSString*) authorization
    storeId: (NSNumber*) storeId
    categoryLogBeanList: (NSArray<SWGCategoryLogBean>*) categoryLogBeanList
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 导入原木商品信息
/// 导入原木商品信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param storeId 店铺id
/// @param categoryLogBeanList categoryLogBeanList (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) importExcelCategoryUsingPUTWithAuthorization: (NSString*) authorization
    storeId: (NSNumber*) storeId
    categoryLogBeanList: (NSArray<SWGCategoryLogBean>*) categoryLogBeanList
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 添加类目信息
/// 添加类目信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param mallCategoryTable mallCategoryTable (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertCategoryUsingDELETEWithAuthorization: (NSString*) authorization
    mallCategoryTable: (SWGMallCategoryTable*) mallCategoryTable
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 添加类目信息
/// 添加类目信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param mallCategoryTable mallCategoryTable (optional)
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertCategoryUsingGETWithAuthorization: (NSString*) authorization
    mallCategoryTable: (SWGMallCategoryTable*) mallCategoryTable
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 添加类目信息
/// 添加类目信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param mallCategoryTable mallCategoryTable (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertCategoryUsingHEADWithAuthorization: (NSString*) authorization
    mallCategoryTable: (SWGMallCategoryTable*) mallCategoryTable
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 添加类目信息
/// 添加类目信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param mallCategoryTable mallCategoryTable (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertCategoryUsingOPTIONSWithAuthorization: (NSString*) authorization
    mallCategoryTable: (SWGMallCategoryTable*) mallCategoryTable
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 添加类目信息
/// 添加类目信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param mallCategoryTable mallCategoryTable (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertCategoryUsingPATCHWithAuthorization: (NSString*) authorization
    mallCategoryTable: (SWGMallCategoryTable*) mallCategoryTable
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 添加类目信息
/// 添加类目信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param mallCategoryTable mallCategoryTable (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertCategoryUsingPOSTWithAuthorization: (NSString*) authorization
    mallCategoryTable: (SWGMallCategoryTable*) mallCategoryTable
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 添加类目信息
/// 添加类目信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param mallCategoryTable mallCategoryTable (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertCategoryUsingPUTWithAuthorization: (NSString*) authorization
    mallCategoryTable: (SWGMallCategoryTable*) mallCategoryTable
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 商品根据类目id显示类目信息
/// 商品根据类目id显示类目信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 商品id
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) showCategoryAllUsingDELETEWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 商品根据类目id显示类目信息
/// 商品根据类目id显示类目信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 商品id
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) showCategoryAllUsingGETWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 商品根据类目id显示类目信息
/// 商品根据类目id显示类目信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 商品id
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) showCategoryAllUsingHEADWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 商品根据类目id显示类目信息
/// 商品根据类目id显示类目信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 商品id
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) showCategoryAllUsingOPTIONSWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 商品根据类目id显示类目信息
/// 商品根据类目id显示类目信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 商品id
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) showCategoryAllUsingPATCHWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 商品根据类目id显示类目信息
/// 商品根据类目id显示类目信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 商品id
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) showCategoryAllUsingPOSTWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 商品根据类目id显示类目信息
/// 商品根据类目id显示类目信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 商品id
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) showCategoryAllUsingPUTWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;



@end
