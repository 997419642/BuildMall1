

#import <Foundation/Foundation.h>
#import "SWGGoodsWarehouseBean.h"
#import "SWGInvoiceTableBean.h"
#import "SWGMallLogisticsBean.h"
#import "SWGMessageResult.h"
#import "SWGWarestoreTable.h"
#import "SWGApi.h"

/**
* Youmu Cloud Framework Swagger API 
* https://www.51wood.com
*
* OpenAPI spec version: 1.0
* Contact: archerchu@163.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface SWGApiClass: NSObject <SWGApi>

extern NSString* kSWGApiErrorDomain;
extern NSInteger kSWGApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(SWGApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// 添加商品及仓库信息
/// 添加商品及仓库信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertGoodsWarehouseUsingDELETEWithAuthorization: (NSString*) authorization
    bean: (SWGGoodsWarehouseBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 添加商品及仓库信息
/// 添加商品及仓库信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertGoodsWarehouseUsingGETWithAuthorization: (NSString*) authorization
    bean: (SWGGoodsWarehouseBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 添加商品及仓库信息
/// 添加商品及仓库信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertGoodsWarehouseUsingHEADWithAuthorization: (NSString*) authorization
    bean: (SWGGoodsWarehouseBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 添加商品及仓库信息
/// 添加商品及仓库信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertGoodsWarehouseUsingOPTIONSWithAuthorization: (NSString*) authorization
    bean: (SWGGoodsWarehouseBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 添加商品及仓库信息
/// 添加商品及仓库信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertGoodsWarehouseUsingPATCHWithAuthorization: (NSString*) authorization
    bean: (SWGGoodsWarehouseBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 添加商品及仓库信息
/// 添加商品及仓库信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertGoodsWarehouseUsingPOSTWithAuthorization: (NSString*) authorization
    bean: (SWGGoodsWarehouseBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 添加商品及仓库信息
/// 添加商品及仓库信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertGoodsWarehouseUsingPUTWithAuthorization: (NSString*) authorization
    bean: (SWGGoodsWarehouseBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 我要叫车
/// 我要叫车
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param mallLogisticsBean mallLogisticsBean (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertMallLogisticsUsingDELETEWithAuthorization: (NSString*) authorization
    mallLogisticsBean: (SWGMallLogisticsBean*) mallLogisticsBean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 我要叫车
/// 我要叫车
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param mallLogisticsBean mallLogisticsBean (optional)
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertMallLogisticsUsingGETWithAuthorization: (NSString*) authorization
    mallLogisticsBean: (SWGMallLogisticsBean*) mallLogisticsBean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 我要叫车
/// 我要叫车
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param mallLogisticsBean mallLogisticsBean (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertMallLogisticsUsingHEADWithAuthorization: (NSString*) authorization
    mallLogisticsBean: (SWGMallLogisticsBean*) mallLogisticsBean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 我要叫车
/// 我要叫车
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param mallLogisticsBean mallLogisticsBean (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertMallLogisticsUsingOPTIONSWithAuthorization: (NSString*) authorization
    mallLogisticsBean: (SWGMallLogisticsBean*) mallLogisticsBean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 我要叫车
/// 我要叫车
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param mallLogisticsBean mallLogisticsBean (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertMallLogisticsUsingPATCHWithAuthorization: (NSString*) authorization
    mallLogisticsBean: (SWGMallLogisticsBean*) mallLogisticsBean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 我要叫车
/// 我要叫车
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param mallLogisticsBean mallLogisticsBean (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertMallLogisticsUsingPOSTWithAuthorization: (NSString*) authorization
    mallLogisticsBean: (SWGMallLogisticsBean*) mallLogisticsBean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 我要叫车
/// 我要叫车
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param mallLogisticsBean mallLogisticsBean (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertMallLogisticsUsingPUTWithAuthorization: (NSString*) authorization
    mallLogisticsBean: (SWGMallLogisticsBean*) mallLogisticsBean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 新增发票信息
/// 新增发票信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertUsingDELETEWithAuthorization: (NSString*) authorization
    bean: (SWGInvoiceTableBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 新增发票信息
/// 新增发票信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertUsingGETWithAuthorization: (NSString*) authorization
    bean: (SWGInvoiceTableBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 新增发票信息
/// 新增发票信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertUsingHEADWithAuthorization: (NSString*) authorization
    bean: (SWGInvoiceTableBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 新增发票信息
/// 新增发票信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertUsingOPTIONSWithAuthorization: (NSString*) authorization
    bean: (SWGInvoiceTableBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 新增发票信息
/// 新增发票信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertUsingPATCHWithAuthorization: (NSString*) authorization
    bean: (SWGInvoiceTableBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 新增发票信息
/// 新增发票信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertUsingPOSTWithAuthorization: (NSString*) authorization
    bean: (SWGInvoiceTableBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 新增发票信息
/// 新增发票信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) insertUsingPUTWithAuthorization: (NSString*) authorization
    bean: (SWGInvoiceTableBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据发票sn查询发票信息
/// 根据发票sn查询发票信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param invoiceSn 发票sn
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) invoiceListUsingDELETEWithAuthorization: (NSString*) authorization
    invoiceSn: (NSString*) invoiceSn
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据发票sn查询发票信息
/// 根据发票sn查询发票信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param invoiceSn 发票sn
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) invoiceListUsingGETWithAuthorization: (NSString*) authorization
    invoiceSn: (NSString*) invoiceSn
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据发票sn查询发票信息
/// 根据发票sn查询发票信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param invoiceSn 发票sn
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) invoiceListUsingHEADWithAuthorization: (NSString*) authorization
    invoiceSn: (NSString*) invoiceSn
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据发票sn查询发票信息
/// 根据发票sn查询发票信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param invoiceSn 发票sn
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) invoiceListUsingOPTIONSWithAuthorization: (NSString*) authorization
    invoiceSn: (NSString*) invoiceSn
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据发票sn查询发票信息
/// 根据发票sn查询发票信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param invoiceSn 发票sn
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) invoiceListUsingPATCHWithAuthorization: (NSString*) authorization
    invoiceSn: (NSString*) invoiceSn
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据发票sn查询发票信息
/// 根据发票sn查询发票信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param invoiceSn 发票sn
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) invoiceListUsingPOSTWithAuthorization: (NSString*) authorization
    invoiceSn: (NSString*) invoiceSn
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据发票sn查询发票信息
/// 根据发票sn查询发票信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param invoiceSn 发票sn
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) invoiceListUsingPUTWithAuthorization: (NSString*) authorization
    invoiceSn: (NSString*) invoiceSn
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示所有店铺文件夹名称
/// 显示所有店铺文件夹名称
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param storeId 店铺id
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectFolderNameUsingDELETEWithAuthorization: (NSString*) authorization
    storeId: (NSNumber*) storeId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示所有店铺文件夹名称
/// 显示所有店铺文件夹名称
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param storeId 店铺id
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectFolderNameUsingGETWithAuthorization: (NSString*) authorization
    storeId: (NSNumber*) storeId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示所有店铺文件夹名称
/// 显示所有店铺文件夹名称
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param storeId 店铺id
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectFolderNameUsingHEADWithAuthorization: (NSString*) authorization
    storeId: (NSNumber*) storeId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示所有店铺文件夹名称
/// 显示所有店铺文件夹名称
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param storeId 店铺id
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectFolderNameUsingOPTIONSWithAuthorization: (NSString*) authorization
    storeId: (NSNumber*) storeId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示所有店铺文件夹名称
/// 显示所有店铺文件夹名称
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param storeId 店铺id
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectFolderNameUsingPATCHWithAuthorization: (NSString*) authorization
    storeId: (NSNumber*) storeId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示所有店铺文件夹名称
/// 显示所有店铺文件夹名称
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param storeId 店铺id
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectFolderNameUsingPOSTWithAuthorization: (NSString*) authorization
    storeId: (NSNumber*) storeId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示所有店铺文件夹名称
/// 显示所有店铺文件夹名称
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param storeId 店铺id
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectFolderNameUsingPUTWithAuthorization: (NSString*) authorization
    storeId: (NSNumber*) storeId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示发票信息
/// 显示发票信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param invoiceId 发票编号
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectInvoiceUsingDELETEWithAuthorization: (NSString*) authorization
    invoiceId: (NSObject*) invoiceId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示发票信息
/// 显示发票信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param invoiceId 发票编号
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectInvoiceUsingGETWithAuthorization: (NSString*) authorization
    invoiceId: (NSObject*) invoiceId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示发票信息
/// 显示发票信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param invoiceId 发票编号
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectInvoiceUsingHEADWithAuthorization: (NSString*) authorization
    invoiceId: (NSObject*) invoiceId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示发票信息
/// 显示发票信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param invoiceId 发票编号
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectInvoiceUsingOPTIONSWithAuthorization: (NSString*) authorization
    invoiceId: (NSObject*) invoiceId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示发票信息
/// 显示发票信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param invoiceId 发票编号
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectInvoiceUsingPATCHWithAuthorization: (NSString*) authorization
    invoiceId: (NSObject*) invoiceId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示发票信息
/// 显示发票信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param invoiceId 发票编号
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectInvoiceUsingPOSTWithAuthorization: (NSString*) authorization
    invoiceId: (NSObject*) invoiceId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示发票信息
/// 显示发票信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param invoiceId 发票编号
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectInvoiceUsingPUTWithAuthorization: (NSString*) authorization
    invoiceId: (NSObject*) invoiceId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示该用户的所有物流单号及条件筛选
/// 显示该用户的所有物流单号及条件筛选
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 编号
/// @param userId 用户id
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectLogisticsDetailsUsingDELETEWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    userId: (NSNumber*) userId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示该用户的所有物流单号及条件筛选
/// 显示该用户的所有物流单号及条件筛选
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 编号
/// @param userId 用户id
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectLogisticsDetailsUsingGETWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    userId: (NSNumber*) userId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示该用户的所有物流单号及条件筛选
/// 显示该用户的所有物流单号及条件筛选
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 编号
/// @param userId 用户id
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectLogisticsDetailsUsingHEADWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    userId: (NSNumber*) userId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示该用户的所有物流单号及条件筛选
/// 显示该用户的所有物流单号及条件筛选
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 编号
/// @param userId 用户id
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectLogisticsDetailsUsingOPTIONSWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    userId: (NSNumber*) userId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示该用户的所有物流单号及条件筛选
/// 显示该用户的所有物流单号及条件筛选
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 编号
/// @param userId 用户id
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectLogisticsDetailsUsingPATCHWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    userId: (NSNumber*) userId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示该用户的所有物流单号及条件筛选
/// 显示该用户的所有物流单号及条件筛选
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 编号
/// @param userId 用户id
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectLogisticsDetailsUsingPOSTWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    userId: (NSNumber*) userId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示该用户的所有物流单号及条件筛选
/// 显示该用户的所有物流单号及条件筛选
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 编号
/// @param userId 用户id
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectLogisticsDetailsUsingPUTWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    userId: (NSNumber*) userId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示该用户的所有物流单号及条件筛选
/// 显示该用户的所有物流单号及条件筛选
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 物流单编号
/// @param loading 起点
/// @param startTime 起始时间
/// @param endTime 结束时间
/// @param unload 卸点
/// @param userId 用户id
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectLogisticsUsingDELETEWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    loading: (NSString*) loading
    startTime: (NSDate*) startTime
    endTime: (NSDate*) endTime
    unload: (NSString*) unload
    userId: (NSNumber*) userId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示该用户的所有物流单号及条件筛选
/// 显示该用户的所有物流单号及条件筛选
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 物流单编号
/// @param loading 起点
/// @param startTime 起始时间
/// @param endTime 结束时间
/// @param unload 卸点
/// @param userId 用户id
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectLogisticsUsingGETWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    loading: (NSString*) loading
    startTime: (NSDate*) startTime
    endTime: (NSDate*) endTime
    unload: (NSString*) unload
    userId: (NSNumber*) userId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示该用户的所有物流单号及条件筛选
/// 显示该用户的所有物流单号及条件筛选
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 物流单编号
/// @param loading 起点
/// @param startTime 起始时间
/// @param endTime 结束时间
/// @param unload 卸点
/// @param userId 用户id
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectLogisticsUsingHEADWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    loading: (NSString*) loading
    startTime: (NSDate*) startTime
    endTime: (NSDate*) endTime
    unload: (NSString*) unload
    userId: (NSNumber*) userId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示该用户的所有物流单号及条件筛选
/// 显示该用户的所有物流单号及条件筛选
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 物流单编号
/// @param loading 起点
/// @param startTime 起始时间
/// @param endTime 结束时间
/// @param unload 卸点
/// @param userId 用户id
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectLogisticsUsingOPTIONSWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    loading: (NSString*) loading
    startTime: (NSDate*) startTime
    endTime: (NSDate*) endTime
    unload: (NSString*) unload
    userId: (NSNumber*) userId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示该用户的所有物流单号及条件筛选
/// 显示该用户的所有物流单号及条件筛选
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 物流单编号
/// @param loading 起点
/// @param startTime 起始时间
/// @param endTime 结束时间
/// @param unload 卸点
/// @param userId 用户id
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectLogisticsUsingPATCHWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    loading: (NSString*) loading
    startTime: (NSDate*) startTime
    endTime: (NSDate*) endTime
    unload: (NSString*) unload
    userId: (NSNumber*) userId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示该用户的所有物流单号及条件筛选
/// 显示该用户的所有物流单号及条件筛选
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 物流单编号
/// @param loading 起点
/// @param startTime 起始时间
/// @param endTime 结束时间
/// @param unload 卸点
/// @param userId 用户id
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectLogisticsUsingPOSTWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    loading: (NSString*) loading
    startTime: (NSDate*) startTime
    endTime: (NSDate*) endTime
    unload: (NSString*) unload
    userId: (NSNumber*) userId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示该用户的所有物流单号及条件筛选
/// 显示该用户的所有物流单号及条件筛选
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 物流单编号
/// @param loading 起点
/// @param startTime 起始时间
/// @param endTime 结束时间
/// @param unload 卸点
/// @param userId 用户id
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectLogisticsUsingPUTWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    loading: (NSString*) loading
    startTime: (NSDate*) startTime
    endTime: (NSDate*) endTime
    unload: (NSString*) unload
    userId: (NSNumber*) userId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 司机信息列表
/// 显示司机信息列表
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param carNo 车牌号
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectOrderUsingDELETEWithAuthorization: (NSString*) authorization
    carNo: (NSString*) carNo
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 司机信息列表
/// 显示司机信息列表
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param carNo 车牌号
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectOrderUsingGETWithAuthorization: (NSString*) authorization
    carNo: (NSString*) carNo
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 司机信息列表
/// 显示司机信息列表
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param carNo 车牌号
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectOrderUsingHEADWithAuthorization: (NSString*) authorization
    carNo: (NSString*) carNo
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 司机信息列表
/// 显示司机信息列表
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param carNo 车牌号
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectOrderUsingOPTIONSWithAuthorization: (NSString*) authorization
    carNo: (NSString*) carNo
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 司机信息列表
/// 显示司机信息列表
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param carNo 车牌号
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectOrderUsingPATCHWithAuthorization: (NSString*) authorization
    carNo: (NSString*) carNo
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 司机信息列表
/// 显示司机信息列表
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param carNo 车牌号
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectOrderUsingPOSTWithAuthorization: (NSString*) authorization
    carNo: (NSString*) carNo
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 司机信息列表
/// 显示司机信息列表
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param carNo 车牌号
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectOrderUsingPUTWithAuthorization: (NSString*) authorization
    carNo: (NSString*) carNo
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 付款日志信息
/// 付款日志信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectPayLogUsingDELETEWithAuthorization: (NSString*) authorization
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 付款日志信息
/// 付款日志信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectPayLogUsingGETWithAuthorization: (NSString*) authorization
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 付款日志信息
/// 付款日志信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectPayLogUsingHEADWithAuthorization: (NSString*) authorization
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 付款日志信息
/// 付款日志信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectPayLogUsingOPTIONSWithAuthorization: (NSString*) authorization
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 付款日志信息
/// 付款日志信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectPayLogUsingPATCHWithAuthorization: (NSString*) authorization
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 付款日志信息
/// 付款日志信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectPayLogUsingPOSTWithAuthorization: (NSString*) authorization
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 付款日志信息
/// 付款日志信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectPayLogUsingPUTWithAuthorization: (NSString*) authorization
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示店铺图片信息
/// 显示店铺图片信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param storeId 店铺id
/// @param folderName 文件夹名称 (optional)
/// @param pictureName 图片名 (optional)
/// @param type 0 早到晚 1晚到早 (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectPictureUsingDELETEWithAuthorization: (NSString*) authorization
    storeId: (NSNumber*) storeId
    folderName: (NSString*) folderName
    pictureName: (NSString*) pictureName
    type: (NSNumber*) type
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示店铺图片信息
/// 显示店铺图片信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param storeId 店铺id
/// @param folderName 文件夹名称 (optional)
/// @param pictureName 图片名 (optional)
/// @param type 0 早到晚 1晚到早 (optional)
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectPictureUsingGETWithAuthorization: (NSString*) authorization
    storeId: (NSNumber*) storeId
    folderName: (NSString*) folderName
    pictureName: (NSString*) pictureName
    type: (NSNumber*) type
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示店铺图片信息
/// 显示店铺图片信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param storeId 店铺id
/// @param folderName 文件夹名称 (optional)
/// @param pictureName 图片名 (optional)
/// @param type 0 早到晚 1晚到早 (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectPictureUsingHEADWithAuthorization: (NSString*) authorization
    storeId: (NSNumber*) storeId
    folderName: (NSString*) folderName
    pictureName: (NSString*) pictureName
    type: (NSNumber*) type
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示店铺图片信息
/// 显示店铺图片信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param storeId 店铺id
/// @param folderName 文件夹名称 (optional)
/// @param pictureName 图片名 (optional)
/// @param type 0 早到晚 1晚到早 (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectPictureUsingOPTIONSWithAuthorization: (NSString*) authorization
    storeId: (NSNumber*) storeId
    folderName: (NSString*) folderName
    pictureName: (NSString*) pictureName
    type: (NSNumber*) type
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示店铺图片信息
/// 显示店铺图片信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param storeId 店铺id
/// @param folderName 文件夹名称 (optional)
/// @param pictureName 图片名 (optional)
/// @param type 0 早到晚 1晚到早 (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectPictureUsingPATCHWithAuthorization: (NSString*) authorization
    storeId: (NSNumber*) storeId
    folderName: (NSString*) folderName
    pictureName: (NSString*) pictureName
    type: (NSNumber*) type
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示店铺图片信息
/// 显示店铺图片信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param storeId 店铺id
/// @param folderName 文件夹名称 (optional)
/// @param pictureName 图片名 (optional)
/// @param type 0 早到晚 1晚到早 (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectPictureUsingPOSTWithAuthorization: (NSString*) authorization
    storeId: (NSNumber*) storeId
    folderName: (NSString*) folderName
    pictureName: (NSString*) pictureName
    type: (NSNumber*) type
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示店铺图片信息
/// 显示店铺图片信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param storeId 店铺id
/// @param folderName 文件夹名称 (optional)
/// @param pictureName 图片名 (optional)
/// @param type 0 早到晚 1晚到早 (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) selectPictureUsingPUTWithAuthorization: (NSString*) authorization
    storeId: (NSNumber*) storeId
    folderName: (NSString*) folderName
    pictureName: (NSString*) pictureName
    type: (NSNumber*) type
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 类目连级筛选
/// 类目连级筛选
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param name 名称
/// @param categoryId 类目id
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) sortAscUsingDELETEWithAuthorization: (NSString*) authorization
    name: (NSString*) name
    categoryId: (NSNumber*) categoryId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 类目连级筛选
/// 类目连级筛选
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param name 名称
/// @param categoryId 类目id
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) sortAscUsingGETWithAuthorization: (NSString*) authorization
    name: (NSString*) name
    categoryId: (NSNumber*) categoryId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 类目连级筛选
/// 类目连级筛选
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param name 名称
/// @param categoryId 类目id
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) sortAscUsingHEADWithAuthorization: (NSString*) authorization
    name: (NSString*) name
    categoryId: (NSNumber*) categoryId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 类目连级筛选
/// 类目连级筛选
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param name 名称
/// @param categoryId 类目id
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) sortAscUsingOPTIONSWithAuthorization: (NSString*) authorization
    name: (NSString*) name
    categoryId: (NSNumber*) categoryId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 类目连级筛选
/// 类目连级筛选
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param name 名称
/// @param categoryId 类目id
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) sortAscUsingPATCHWithAuthorization: (NSString*) authorization
    name: (NSString*) name
    categoryId: (NSNumber*) categoryId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 类目连级筛选
/// 类目连级筛选
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param name 名称
/// @param categoryId 类目id
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) sortAscUsingPOSTWithAuthorization: (NSString*) authorization
    name: (NSString*) name
    categoryId: (NSNumber*) categoryId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 类目连级筛选
/// 类目连级筛选
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param name 名称
/// @param categoryId 类目id
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) sortAscUsingPUTWithAuthorization: (NSString*) authorization
    name: (NSString*) name
    categoryId: (NSNumber*) categoryId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 库存清零
/// 库存清零
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param goodsId goodsId (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) stockInitializationUsingDELETEWithAuthorization: (NSString*) authorization
    goodsId: (NSArray<NSNumber*>*) goodsId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 库存清零
/// 库存清零
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param goodsId goodsId (optional)
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) stockInitializationUsingGETWithAuthorization: (NSString*) authorization
    goodsId: (NSArray<NSNumber*>*) goodsId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 库存清零
/// 库存清零
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param goodsId goodsId (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) stockInitializationUsingHEADWithAuthorization: (NSString*) authorization
    goodsId: (NSArray<NSNumber*>*) goodsId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 库存清零
/// 库存清零
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param goodsId goodsId (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) stockInitializationUsingOPTIONSWithAuthorization: (NSString*) authorization
    goodsId: (NSArray<NSNumber*>*) goodsId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 库存清零
/// 库存清零
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param goodsId goodsId (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) stockInitializationUsingPATCHWithAuthorization: (NSString*) authorization
    goodsId: (NSArray<NSNumber*>*) goodsId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 库存清零
/// 库存清零
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param goodsId goodsId (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) stockInitializationUsingPOSTWithAuthorization: (NSString*) authorization
    goodsId: (NSArray<NSNumber*>*) goodsId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 库存清零
/// 库存清零
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param goodsId goodsId (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) stockInitializationUsingPUTWithAuthorization: (NSString*) authorization
    goodsId: (NSArray<NSNumber*>*) goodsId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据商品id及包号模糊查询库存信息
/// 根据商品id及包号模糊查询库存信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param goodsId 商品id
/// @param packetNumber 包号 (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) stockListUsingDELETEWithAuthorization: (NSString*) authorization
    goodsId: (NSNumber*) goodsId
    packetNumber: (NSString*) packetNumber
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据商品id及包号模糊查询库存信息
/// 根据商品id及包号模糊查询库存信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param goodsId 商品id
/// @param packetNumber 包号 (optional)
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) stockListUsingGETWithAuthorization: (NSString*) authorization
    goodsId: (NSNumber*) goodsId
    packetNumber: (NSString*) packetNumber
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据商品id及包号模糊查询库存信息
/// 根据商品id及包号模糊查询库存信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param goodsId 商品id
/// @param packetNumber 包号 (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) stockListUsingHEADWithAuthorization: (NSString*) authorization
    goodsId: (NSNumber*) goodsId
    packetNumber: (NSString*) packetNumber
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据商品id及包号模糊查询库存信息
/// 根据商品id及包号模糊查询库存信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param goodsId 商品id
/// @param packetNumber 包号 (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) stockListUsingOPTIONSWithAuthorization: (NSString*) authorization
    goodsId: (NSNumber*) goodsId
    packetNumber: (NSString*) packetNumber
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据商品id及包号模糊查询库存信息
/// 根据商品id及包号模糊查询库存信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param goodsId 商品id
/// @param packetNumber 包号 (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) stockListUsingPATCHWithAuthorization: (NSString*) authorization
    goodsId: (NSNumber*) goodsId
    packetNumber: (NSString*) packetNumber
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据商品id及包号模糊查询库存信息
/// 根据商品id及包号模糊查询库存信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param goodsId 商品id
/// @param packetNumber 包号 (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) stockListUsingPOSTWithAuthorization: (NSString*) authorization
    goodsId: (NSNumber*) goodsId
    packetNumber: (NSString*) packetNumber
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据商品id及包号模糊查询库存信息
/// 根据商品id及包号模糊查询库存信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param goodsId 商品id
/// @param packetNumber 包号 (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) stockListUsingPUTWithAuthorization: (NSString*) authorization
    goodsId: (NSNumber*) goodsId
    packetNumber: (NSString*) packetNumber
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据商品编辑仓库的信息
/// 根据商品编辑仓库的信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateGoodsWarehouseUsingDELETEWithAuthorization: (NSString*) authorization
    bean: (SWGGoodsWarehouseBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据商品编辑仓库的信息
/// 根据商品编辑仓库的信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateGoodsWarehouseUsingGETWithAuthorization: (NSString*) authorization
    bean: (SWGGoodsWarehouseBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据商品编辑仓库的信息
/// 根据商品编辑仓库的信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateGoodsWarehouseUsingHEADWithAuthorization: (NSString*) authorization
    bean: (SWGGoodsWarehouseBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据商品编辑仓库的信息
/// 根据商品编辑仓库的信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateGoodsWarehouseUsingOPTIONSWithAuthorization: (NSString*) authorization
    bean: (SWGGoodsWarehouseBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据商品编辑仓库的信息
/// 根据商品编辑仓库的信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateGoodsWarehouseUsingPATCHWithAuthorization: (NSString*) authorization
    bean: (SWGGoodsWarehouseBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据商品编辑仓库的信息
/// 根据商品编辑仓库的信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateGoodsWarehouseUsingPOSTWithAuthorization: (NSString*) authorization
    bean: (SWGGoodsWarehouseBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据商品编辑仓库的信息
/// 根据商品编辑仓库的信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateGoodsWarehouseUsingPUTWithAuthorization: (NSString*) authorization
    bean: (SWGGoodsWarehouseBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 为订单开发票
/// 为订单开发票
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateInvoiceUsingDELETEWithAuthorization: (NSString*) authorization
    bean: (SWGInvoiceTableBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 为订单开发票
/// 为订单开发票
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateInvoiceUsingGETWithAuthorization: (NSString*) authorization
    bean: (SWGInvoiceTableBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 为订单开发票
/// 为订单开发票
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateInvoiceUsingHEADWithAuthorization: (NSString*) authorization
    bean: (SWGInvoiceTableBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 为订单开发票
/// 为订单开发票
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateInvoiceUsingOPTIONSWithAuthorization: (NSString*) authorization
    bean: (SWGInvoiceTableBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 为订单开发票
/// 为订单开发票
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateInvoiceUsingPATCHWithAuthorization: (NSString*) authorization
    bean: (SWGInvoiceTableBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 为订单开发票
/// 为订单开发票
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateInvoiceUsingPOSTWithAuthorization: (NSString*) authorization
    bean: (SWGInvoiceTableBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 为订单开发票
/// 为订单开发票
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param bean bean (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateInvoiceUsingPUTWithAuthorization: (NSString*) authorization
    bean: (SWGInvoiceTableBean*) bean
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 确认价格
/// 确认价格
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param logisticsId 物流编号
/// @param priceType 付款方式
/// @param eranest 定金
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateLogisticsPriceUsingDELETEWithAuthorization: (NSString*) authorization
    logisticsId: (NSNumber*) logisticsId
    priceType: (NSNumber*) priceType
    eranest: (NSNumber*) eranest
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 确认价格
/// 确认价格
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param logisticsId 物流编号
/// @param priceType 付款方式
/// @param eranest 定金
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateLogisticsPriceUsingGETWithAuthorization: (NSString*) authorization
    logisticsId: (NSNumber*) logisticsId
    priceType: (NSNumber*) priceType
    eranest: (NSNumber*) eranest
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 确认价格
/// 确认价格
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param logisticsId 物流编号
/// @param priceType 付款方式
/// @param eranest 定金
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateLogisticsPriceUsingHEADWithAuthorization: (NSString*) authorization
    logisticsId: (NSNumber*) logisticsId
    priceType: (NSNumber*) priceType
    eranest: (NSNumber*) eranest
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 确认价格
/// 确认价格
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param logisticsId 物流编号
/// @param priceType 付款方式
/// @param eranest 定金
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateLogisticsPriceUsingOPTIONSWithAuthorization: (NSString*) authorization
    logisticsId: (NSNumber*) logisticsId
    priceType: (NSNumber*) priceType
    eranest: (NSNumber*) eranest
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 确认价格
/// 确认价格
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param logisticsId 物流编号
/// @param priceType 付款方式
/// @param eranest 定金
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateLogisticsPriceUsingPATCHWithAuthorization: (NSString*) authorization
    logisticsId: (NSNumber*) logisticsId
    priceType: (NSNumber*) priceType
    eranest: (NSNumber*) eranest
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 确认价格
/// 确认价格
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param logisticsId 物流编号
/// @param priceType 付款方式
/// @param eranest 定金
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateLogisticsPriceUsingPOSTWithAuthorization: (NSString*) authorization
    logisticsId: (NSNumber*) logisticsId
    priceType: (NSNumber*) priceType
    eranest: (NSNumber*) eranest
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 确认价格
/// 确认价格
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param logisticsId 物流编号
/// @param priceType 付款方式
/// @param eranest 定金
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateLogisticsPriceUsingPUTWithAuthorization: (NSString*) authorization
    logisticsId: (NSNumber*) logisticsId
    priceType: (NSNumber*) priceType
    eranest: (NSNumber*) eranest
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 修改状态
/// 修改状态
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param struts 状态值
/// @param _id 编号
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateLogisticsUsingDELETEWithAuthorization: (NSString*) authorization
    struts: (NSNumber*) struts
    _id: (NSNumber*) _id
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 修改状态
/// 修改状态
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param struts 状态值
/// @param _id 编号
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateLogisticsUsingGETWithAuthorization: (NSString*) authorization
    struts: (NSNumber*) struts
    _id: (NSNumber*) _id
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 修改状态
/// 修改状态
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param struts 状态值
/// @param _id 编号
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateLogisticsUsingHEADWithAuthorization: (NSString*) authorization
    struts: (NSNumber*) struts
    _id: (NSNumber*) _id
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 修改状态
/// 修改状态
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param struts 状态值
/// @param _id 编号
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateLogisticsUsingOPTIONSWithAuthorization: (NSString*) authorization
    struts: (NSNumber*) struts
    _id: (NSNumber*) _id
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 修改状态
/// 修改状态
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param struts 状态值
/// @param _id 编号
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateLogisticsUsingPATCHWithAuthorization: (NSString*) authorization
    struts: (NSNumber*) struts
    _id: (NSNumber*) _id
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 修改状态
/// 修改状态
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param struts 状态值
/// @param _id 编号
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateLogisticsUsingPOSTWithAuthorization: (NSString*) authorization
    struts: (NSNumber*) struts
    _id: (NSNumber*) _id
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 修改状态
/// 修改状态
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param struts 状态值
/// @param _id 编号
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updateLogisticsUsingPUTWithAuthorization: (NSString*) authorization
    struts: (NSNumber*) struts
    _id: (NSNumber*) _id
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 修改店铺图片信息
/// 修改店铺图片信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 图片id
/// @param localImg 图片名称 (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updatePictureUsingDELETEWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    localImg: (NSString*) localImg
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 修改店铺图片信息
/// 修改店铺图片信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 图片id
/// @param localImg 图片名称 (optional)
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updatePictureUsingGETWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    localImg: (NSString*) localImg
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 修改店铺图片信息
/// 修改店铺图片信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 图片id
/// @param localImg 图片名称 (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updatePictureUsingHEADWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    localImg: (NSString*) localImg
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 修改店铺图片信息
/// 修改店铺图片信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 图片id
/// @param localImg 图片名称 (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updatePictureUsingOPTIONSWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    localImg: (NSString*) localImg
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 修改店铺图片信息
/// 修改店铺图片信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 图片id
/// @param localImg 图片名称 (optional)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updatePictureUsingPATCHWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    localImg: (NSString*) localImg
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 修改店铺图片信息
/// 修改店铺图片信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 图片id
/// @param localImg 图片名称 (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updatePictureUsingPOSTWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    localImg: (NSString*) localImg
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 修改店铺图片信息
/// 修改店铺图片信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param _id 图片id
/// @param localImg 图片名称 (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) updatePictureUsingPUTWithAuthorization: (NSString*) authorization
    _id: (NSNumber*) _id
    localImg: (NSString*) localImg
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据用户id显示收货地址信息
/// 根据用户id显示收货地址信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param userId 用户id
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) userAddressListUsingDELETEWithAuthorization: (NSString*) authorization
    userId: (NSNumber*) userId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据用户id显示收货地址信息
/// 根据用户id显示收货地址信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param userId 用户id
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) userAddressListUsingGETWithAuthorization: (NSString*) authorization
    userId: (NSNumber*) userId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据用户id显示收货地址信息
/// 根据用户id显示收货地址信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param userId 用户id
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) userAddressListUsingHEADWithAuthorization: (NSString*) authorization
    userId: (NSNumber*) userId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据用户id显示收货地址信息
/// 根据用户id显示收货地址信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param userId 用户id
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) userAddressListUsingOPTIONSWithAuthorization: (NSString*) authorization
    userId: (NSNumber*) userId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据用户id显示收货地址信息
/// 根据用户id显示收货地址信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param userId 用户id
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) userAddressListUsingPATCHWithAuthorization: (NSString*) authorization
    userId: (NSNumber*) userId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据用户id显示收货地址信息
/// 根据用户id显示收货地址信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param userId 用户id
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) userAddressListUsingPOSTWithAuthorization: (NSString*) authorization
    userId: (NSNumber*) userId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据用户id显示收货地址信息
/// 根据用户id显示收货地址信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param userId 用户id
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) userAddressListUsingPUTWithAuthorization: (NSString*) authorization
    userId: (NSNumber*) userId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据司机编号查司机信息
/// 根据司机编号查司机信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param driverId 司机编号
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) userDriverListUsingDELETEWithAuthorization: (NSString*) authorization
    driverId: (NSNumber*) driverId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据司机编号查司机信息
/// 根据司机编号查司机信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param driverId 司机编号
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) userDriverListUsingGETWithAuthorization: (NSString*) authorization
    driverId: (NSNumber*) driverId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据司机编号查司机信息
/// 根据司机编号查司机信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param driverId 司机编号
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) userDriverListUsingHEADWithAuthorization: (NSString*) authorization
    driverId: (NSNumber*) driverId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据司机编号查司机信息
/// 根据司机编号查司机信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param driverId 司机编号
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) userDriverListUsingOPTIONSWithAuthorization: (NSString*) authorization
    driverId: (NSNumber*) driverId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据司机编号查司机信息
/// 根据司机编号查司机信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param driverId 司机编号
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) userDriverListUsingPATCHWithAuthorization: (NSString*) authorization
    driverId: (NSNumber*) driverId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据司机编号查司机信息
/// 根据司机编号查司机信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param driverId 司机编号
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) userDriverListUsingPOSTWithAuthorization: (NSString*) authorization
    driverId: (NSNumber*) driverId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 根据司机编号查司机信息
/// 根据司机编号查司机信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// @param driverId 司机编号
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGMessageResult*
-(NSURLSessionTask*) userDriverListUsingPUTWithAuthorization: (NSString*) authorization
    driverId: (NSNumber*) driverId
    completionHandler: (void (^)(SWGMessageResult* output, NSError* error)) handler;


/// 显示所有仓库信息
/// 显示所有仓库信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return NSArray<SWGWarestoreTable>*
-(NSURLSessionTask*) warehouseListUsingDELETEWithAuthorization: (NSString*) authorization
    completionHandler: (void (^)(NSArray<SWGWarestoreTable>* output, NSError* error)) handler;


/// 显示所有仓库信息
/// 显示所有仓库信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return NSArray<SWGWarestoreTable>*
-(NSURLSessionTask*) warehouseListUsingGETWithAuthorization: (NSString*) authorization
    completionHandler: (void (^)(NSArray<SWGWarestoreTable>* output, NSError* error)) handler;


/// 显示所有仓库信息
/// 显示所有仓库信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return NSArray<SWGWarestoreTable>*
-(NSURLSessionTask*) warehouseListUsingHEADWithAuthorization: (NSString*) authorization
    completionHandler: (void (^)(NSArray<SWGWarestoreTable>* output, NSError* error)) handler;


/// 显示所有仓库信息
/// 显示所有仓库信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return NSArray<SWGWarestoreTable>*
-(NSURLSessionTask*) warehouseListUsingOPTIONSWithAuthorization: (NSString*) authorization
    completionHandler: (void (^)(NSArray<SWGWarestoreTable>* output, NSError* error)) handler;


/// 显示所有仓库信息
/// 显示所有仓库信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// 
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return NSArray<SWGWarestoreTable>*
-(NSURLSessionTask*) warehouseListUsingPATCHWithAuthorization: (NSString*) authorization
    completionHandler: (void (^)(NSArray<SWGWarestoreTable>* output, NSError* error)) handler;


/// 显示所有仓库信息
/// 显示所有仓库信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return NSArray<SWGWarestoreTable>*
-(NSURLSessionTask*) warehouseListUsingPOSTWithAuthorization: (NSString*) authorization
    completionHandler: (void (^)(NSArray<SWGWarestoreTable>* output, NSError* error)) handler;


/// 显示所有仓库信息
/// 显示所有仓库信息
///
/// @param authorization 令牌 (default to 去其他请求中获取heard中token参数)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return NSArray<SWGWarestoreTable>*
-(NSURLSessionTask*) warehouseListUsingPUTWithAuthorization: (NSString*) authorization
    completionHandler: (void (^)(NSArray<SWGWarestoreTable>* output, NSError* error)) handler;



@end
